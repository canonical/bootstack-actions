name: Release Charm

on:
  workflow_call:
    inputs:
      artifact:
        description: |
          Name of artifact to download before building. This artifact can be used to
          store resources or any other files needed for testing. The file needs to be
          packed as tar.gz file.
        required: false
        type: string
      channel:
        description: |
          The channel to which charm should be released. Edge channel is default.
        default: latest/edge
        required: false
        type: string
      upload-image:
        description: |
          Set to true if you want to update the OCI image
        required: false
        type: boolean
        default: false
      runs-on:
        required: false
        type: string
        default: "['ubuntu-latest']"
        description: "JSON format list of labels for runs-on"
      destructive-mode:
        required: false
        type: boolean
        default: true
        description: |
          Can be used to turn off destructive mode while building.
          This is useful when building on other architectures/bases than the one
          of the runner.
    secrets:
      CHARMHUB_TOKEN:
        required: true

jobs:
  release-to-charmhub:
    name: Release to CharmHub
    runs-on: ${{ fromJson(inputs.runs-on) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Download Artifact
        if: ${{ inputs.artifact != '' }}
        id: download_artifact
        uses: actions/download-artifact@v4
        with:
          name: "${{ inputs.artifact }}"
      - name: Unpack Artifact
        if: ${{ inputs.artifact != '' }}
        run: sudo apt-get update && sudo apt-get install tar && tar xf artifact.tar.gz
      - name: Initialize lxd  # This should dropped once it's implemented on charming-actions itself.
        if: ${{ inputs.destructive-mode == false }}
        run: |
          sudo lxd init --auto
          # The following is needed to fix network error when creating new base instance on lxd
          sudo chmod a+wr /var/snap/lxd/common/lxd/unix.socket
          lxc network set lxdbr0 ipv6.address none
          sudo usermod -a -G lxd $USER
          if [[ $(cat /etc/os-release | grep VERSION_CODENAME) == *"jammy"* ]]; then
            sudo iptables -F FORWARD
            sudo iptables -P FORWARD ACCEPT
          fi
      - name: Upload charm to CharmHub
        uses: canonical/charming-actions/upload-charm@2.5.0-rc
        with:
          credentials: "${{ secrets.CHARMHUB_TOKEN }}"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          channel: "${{ inputs.channel }}"
          upload-image: "${{ inputs.upload-image }}"
          destructive-mode: "${{ inputs.destructive-mode }}"
